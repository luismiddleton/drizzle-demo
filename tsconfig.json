{
    "compilerOptions": {
      /* Visit https://aka.ms/tsconfig to read more about this file */
  
      /* Basic Options */
      "target": "es2022",      /* Set the JavaScript language version for emitted code to support the latest Node.js features. */
      "module": "commonjs",    /* Specify what module code is generated.  */
      "lib": ["es2022"],       /* Specify library files to be included in the compilation. */
      "allowJs": true,         /* Allow javascript files to be compiled as well */
      "checkJs": false,        /* Report errors in .js files.  */
      "jsx": "preserve",       /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
      "declaration": true,     /* Generates corresponding '.d.ts' file. */
      "sourceMap": true,       /* Generate source map files. */
      "outDir": "./dist",       /* Specify the output directory for compiled files. */
      "rootDir": "./src",       /* Specify the root directory of input files. Use to control the directory structure of the output directory. */
      "removeComments": true,  /* Do not emit comments to output. */
      "importHelpers": true,     /* Import emit helpers from 'tslib' if needed. */
      "isolatedModules": true,  /* Ensure that each file can be safely transpiled without relying on other imports. */
      "esModuleInterop": true,  /* Enables emit interoperability between CommonJS and ES Modules via creation of a default namespace import. */
  
      /* Strict Type Checking Options */
      "strict": true,           /* Enable all strict type-checking options. */
      "noImplicitAny": true,    /* Raise error on expressions and declarations with an implied 'any' type. */
      "strictNullChecks": true, /* Enable strict null checks. */
      "strictFunctionTypes": true,  /* Enable strict checking of function types. */
      "strictBindCallApply": true,  /* Enable strict checking of 'bind', 'call', and 'apply' methods on functions. */
      "noImplicitThis": true,   /* Raise error on 'this' expressions with an implied 'any' type. */
      "alwaysStrict": true,     /* Parse in strict mode and emit "use strict" for each source file. */
  
      /* Additional Checks Options */
      "noUnusedLocals": true,    /* Report errors on unused locals. */
      "noUnusedParameters": true,  /* Report errors on unused parameters. */
      "noImplicitReturns": true,   /* Report error when not all code paths in function return a value. */
      "noFallthroughCasesInSwitch": true,  /* Report errors for fallthrough cases in switch statement. */
      "noUncheckedIndexedAccess": true,    /* Include 'undefined' in index signature results */
      "allowUnreachableCode": false,       /* Disallow unreachable code */
      "allowUnusedLabels": false,         /* Disallow unused labels */
  
      /* Module Resolution Options */
      "moduleResolution": "node",  /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
      "baseUrl": "./",            /* Base directory to resolve non-absolute module names. */
      "paths": {
        "*": ["src/*"]         /* Map the root directory to ./src */
      },
      "rootDirs": ["./src"],       /* List of root folders whose combined content should represent the structure of the project at runtime */
      "typeRoots": ["node_modules/@types", "globals.d.ts"], /* List of folders to include type definitions from. */
      "resolveJsonModule": true,    /* Include modules imported with '.json' extension. */
      "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
      "preserveSymlinks": true,    /* Do not resolve the real path of symlinks. */
      "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
      "suppressExcessPropertyErrors": false, /* Suppress excess property checks for object literals */
      "suppressImplicitAnyIndexErrors": false,  /* Suppress noImplicitAny errors when indexing via strings */
  
      /* Source Map Options */
      "sourceRoot": "/src",      /* Specify the location where debugger should locate TypeScript files after bundling/minification. */
      "mapRoot": "/dist",         /* Specify the location where debugger should locate map files after bundling/minification. */
  
      /* Experimental Options */
      "experimentalDecorators": true,  /* Enables experimental support for ES7 decorators. */
      "emitDecoratorMetadata": true,    /* Enables experimental support for emitting type metadata for decorators. */
    },
    "exclude": [
      "node_modules",
      "dist"
    ],
    "include": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "test/**/*.ts",
      "test/**/*.tsx"
    ]
  }
  